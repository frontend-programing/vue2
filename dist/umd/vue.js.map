{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/** 判断当前data是不是对象类型 */\nexport function isObject(data) {\n  return data !== null && typeof data === 'object'\n}\n\n/** 定义一个不可枚举的属性 */\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}\n","import { observe } from './index'\n/**\n * array.js文件要重写数组的几个常用方法\n * push shift unshift pop reverse sort splice这些会导致数组本身发生变化的方法要重写\n * 像slice不是改变本身而是产生副本的方法不需要重写\n */\n\nconst oldArrayMethods = Array.prototype\n\n/**\n * 给arrayMethods扩展原型，指向oldArrayMethods。其实就是数组原生的prototype\n * arrayMethods -> oldArrayMethods -> Object.prototype -> null\n */\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = ['push', 'shift', 'unshift', 'pop', 'reverse', 'sort', 'splice']\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    /** 重写的新方法先调用原生的方法，并且把该传入的参数传入\n     * 然后this就是指调用数组方法的数组实例\n     * 其实这个就是AOP切片编程思想\n     */\n    oldArrayMethods[method].apply(this, args)\n    let inserted\n    const ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      /** splice(0, 1, newValue) */\n      case 'splice':\n        inserted = args.slice(2)\n        break\n    }\n\n    if (inserted) {\n      /** 将新增的属性继续去劫持 */\n      ob.observeArray(inserted)\n    }\n  }\n})\n","import { def, isObject } from '../utils/index'\nimport { arrayMethods } from './array'\n\n/** defineReactive利用Object.defineProperty重新定义data中的属性\n * Object.defineProperty(data, 'a', {\n *   get() {\n *     return 1\n *   }\n * })\n */\nfunction defineReactive(data, key, value) {\n  /**\n   * 直接传value，因为很可能嵌套对象也需要劫持\n   * 递归劫持\n   *  其实这里头也隐藏了判断逻辑，即只劫持对象，如果是普通属性直接就拒绝掉不执行函数了\n   */\n  observe(value)\n  Object.defineProperty(data, key, {\n    get() {\n      return value\n    },\n    set(newValue) {\n      /** 这个判断要加上，要不然可能死循环\n       * 原因：在set函数里头进行value = newValue，那么就是给value赋值，一给value赋值就会触发set函数\n       * 于是又进入set函数了，此时能够通过是因为这句判断newValue等于value了，所以return了\n       * 要不然就会无限执行value = newValue\n       */\n      if (newValue === value) return\n      /**\n       * 由于用户使用上还可能直接vm._data.b = { name:'jaylen'}直接赋值一个新对象，覆盖了原来劫持的对象了\n       * 所以set方法也是需要劫持的\n       */\n      observe(newValue)\n      value = newValue\n    }\n  })\n}\n\n/** Observer用于观测数据 */\nclass Observer {\n  constructor(data) {\n    // data.__ob__ = this\n    /** 在data定一个不可枚举和修改的属性，叫做__ob__ */\n    def(data, '__ob__', this)\n    /**\n     * 能执行到这一步，只有引用类型才能做到\n     * 目前只考虑数组和对象两种情况\n     * 假如，我们要劫持的是数组的话，按目前的情况，我们会把数组的每一个key，也就是下标索引劫持了\n     * 但是vue内部不是这样做的，因为劫持数组的下标很耗费性能\n     * 前端开发中，很少直接操作数组，都是操作arr.push,arr.shift这一类间接操作索引的方法\n     */\n    if (Array.isArray(data)) {\n      /**\n       * Object.setPrototypeOf(data, arrayMethods)\n       * Array实例 -> arrayMethods -> oldArrayMethods -> Object.prototype -> null\n       */\n      Object.setPrototypeOf(data, arrayMethods)\n      this.observeArray(data)\n    } else {\n      this.walk(data)\n    }\n  }\n\n  /**\n   * observeArray劫持数组跟walk不同的地方在于，碰到数组本身会直接绕过，即不处理数组的索引\n   * 直接处理数组的每一个值，这样子索引就不会被劫持到。而用walk不止会对数组元素劫持，会对数组自身也劫持（即数组的索引）\n   */\n  observeArray(data) {\n    /** 遍历数组,劫持每一个对象（为啥这么说？是因为observe自带判断，如果非对象类型即object类型直接return了） */\n    for (let i = 0; i < data.length; i++) {\n      /** 如果是基本属性，就跳过\n       * 如果是对象就会劫持对象\n       * data: -> [ { age: 1 } ]\n       * data[i] -> { age: 1 }\n       */\n      observe(data[i])\n    }\n  }\n  /** 遍历对象进行defineReactive */\n  walk(data) {\n    /** 获取data所有key\n     *  new Vue({\n     *   data() {\n     *     return {\n     *       a: 1,\n     *       b: 2\n     *     }\n     *   }\n     * })\n     * 获取到 [a,b]\n     *\n     */\n    const keys = Object.keys(data)\n    /** 遍历keys [a,b] */\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i] /** a */\n      const value = data[key] /** 1 */\n      /**\n       * data = {\n       *   a: 1,\n       *   b: 2\n       * }\n       * key = a\n       * value = 1\n       */\n      defineReactive(data, key, value)\n    }\n  }\n}\n\n/** 负责data的观测：数据劫持\n * 把data里头的数据，都是用Object.defineProperty去重新定义成get，set的方式\n * 只有对象才会被劫持即，isObject(data) === true\n */\nexport function observe(data) {\n  /** null和非对象直接返回 */\n  if (!isObject(data)) return\n\n  /** Observer用于观测数据 */\n  return new Observer(data)\n}\n","import { observe } from './observer/index'\n\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initData(vm) {\n  let data = vm.$options.data\n  data = typeof data === 'function' ? data.call(vm) : data\n  vm._data = data\n  /** 对象劫持：为了用户改变数据的时候，我们能够得到通知（其实就是刷新页面） */\n  /** MVVM模式：数据变化可以驱动视图变化 */\n  /**\n   * observe: 核心功能，给属性增加get和set方法\n   * 这个就是vue的响应式原理\n   */\n  observe(data)\n}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n\nexport function initState(vm) {\n  /** Vue的数据来源很多：属性，方法，数据，计算属性，watch */\n  const options = vm.$options\n\n  /** 属性初始化 */\n  if (options.props) {\n    initProps(vm)\n  }\n\n  /** 方法初始化 */\n  if (options.methods) {\n    initMethods(vm)\n  }\n\n  /** 数据初始化 */\n  if (options.data) {\n    initData(vm)\n  }\n\n  /** 计算属性初始化 */\n  if (options.computed) {\n    initComputed(vm)\n  }\n\n  /** watch初始化*/\n  if (options.watch) {\n    initWatch(vm)\n  }\n}\n","import { initState } from './state'\n\nexport function _init(options) {\n  const vm = this\n  vm.$options = options\n  /** 初始化状态 */\n  initState(vm)\n}\n","import { _init } from './init'\n\nexport default class Vue {\n  constructor(options) {\n    this._init(options)\n  }\n}\n\nVue.prototype._init = _init\n"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","apply","inserted","ob","__ob__","slice","observeArray","defineReactive","observe","get","set","newValue","Observer","isArray","setPrototypeOf","walk","i","length","keys","initData","vm","$options","call","_data","initState","options","props","computed","watch","_init","Vue"],"mappings":"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"}