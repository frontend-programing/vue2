{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/** 判断当前data是不是对象类型 */\nexport function isObject(data) {\n  return data !== null && typeof data === 'object'\n}\n","import { isObject } from '../utils/index'\n\n/** defineReactive利用Object.defineProperty重新定义data中的属性\n * Object.defineProperty(data, 'a', {\n *   get() {\n *     return 1\n *   }\n * })\n */\nfunction defineReactive(data, key, value) {\n  /**\n   * 直接传value，因为很可能嵌套对象也需要劫持\n   * 递归劫持\n   */\n  observe(value)\n  Object.defineProperty(data, key, {\n    get() {\n      return value\n    },\n    set(newValue) {\n      /** 这个判断要加上，要不然可能死循环\n       * 原因：在set函数里头进行value = newValue，那么就是给value赋值，一给value赋值就会触发set函数\n       * 于是又进入set函数了，此时能够通过是因为这句判断newValue等于value了，所以return了\n       * 要不然就会无限执行value = newValue\n       */\n      if (newValue === value) return\n      /**\n       * 由于用户使用上还可能直接vm._data.b = { name:'jaylen'}直接赋值一个新对象，覆盖了原来劫持的对象了\n       * 所以set方法也是需要劫持的\n       */\n      observe(newValue)\n      value = newValue\n    }\n  })\n}\n\n/** Observer用于观测数据 */\nclass Observer {\n  constructor(data) {\n    this.walk(data)\n  }\n\n  walk(data) {\n    /** 获取data所有key\n     *  new Vue({\n     *   data() {\n     *     return {\n     *       a: 1,\n     *       b: 2\n     *     }\n     *   }\n     * })\n     * 获取到 [a,b]\n     *\n     */\n    const keys = Object.keys(data)\n    /** 遍历keys [a,b] */\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i] /** a */\n      const value = data[key] /** 1 */\n      /**\n       * data = {\n       *   a: 1,\n       *   b: 2\n       * }\n       * key = a\n       * value = 1\n       */\n      defineReactive(data, key, value)\n    }\n  }\n}\n\n/** 负责data的观测：数据劫持\n * 把data里头的数据，都是用Object.defineProperty去重新定义成get，set的方式\n * 只有对象才会被劫持即，isObject(data) === true\n */\nexport function observe(data) {\n  /** null和非对象直接返回 */\n  if (!isObject(data)) return\n\n  /** Observer用于观测数据 */\n  return new Observer(data)\n}\n","import { observe } from './observer/index'\n\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initData(vm) {\n  let data = vm.$options.data\n  data = typeof data === 'function' ? data.call(vm) : data\n  vm._data = data\n  /** 对象劫持：为了用户改变数据的时候，我们能够得到通知（其实就是刷新页面） */\n  /** MVVM模式：数据变化可以驱动视图变化 */\n  /**\n   * observe: 核心功能，给属性增加get和set方法\n   * 这个就是vue的响应式原理\n   */\n  observe(data)\n}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n\nexport function initState(vm) {\n  /** Vue的数据来源很多：属性，方法，数据，计算属性，watch */\n  const options = vm.$options\n\n  /** 属性初始化 */\n  if (options.props) {\n    initProps(vm)\n  }\n\n  /** 方法初始化 */\n  if (options.methods) {\n    initMethods(vm)\n  }\n\n  /** 数据初始化 */\n  if (options.data) {\n    initData(vm)\n  }\n\n  /** 计算属性初始化 */\n  if (options.computed) {\n    initComputed(vm)\n  }\n\n  /** watch初始化*/\n  if (options.watch) {\n    initWatch(vm)\n  }\n}\n","import { initState } from './state'\n\nexport function _init(options) {\n  const vm = this\n  vm.$options = options\n  /** 初始化状态 */\n  initState(vm)\n}\n","import { _init } from './init'\n\nexport default class Vue {\n  constructor(options) {\n    this._init(options)\n  }\n}\n\nVue.prototype._init = _init\n"],"names":["isObject","data","defineReactive","key","value","observe","Object","defineProperty","get","set","newValue","Observer","walk","keys","i","length","initData","vm","$options","call","_data","initState","options","props","methods","computed","watch","_init","Vue","prototype"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACO,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EAC7B,EAAA,OAAOA,IAAI,KAAK,IAAT,IAAiB,OAAOA,CAAAA,IAAP,MAAgB,QAAxC,CAAA;EACD;;ECDD;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,SAASC,cAAT,CAAwBD,IAAxB,EAA8BE,GAA9B,EAAmCC,KAAnC,EAA0C;EACxC;EACF;EACA;EACA;EACEC,EAAAA,OAAO,CAACD,KAAD,CAAP,CAAA;EACAE,EAAAA,MAAM,CAACC,cAAP,CAAsBN,IAAtB,EAA4BE,GAA5B,EAAiC;EAC/BK,IAAAA,GAD+B,EACzB,SAAA,GAAA,GAAA;EACJ,MAAA,OAAOJ,KAAP,CAAA;EACD,KAH8B;EAI/BK,IAAAA,GAJ+B,EAI3BC,SAAAA,GAAAA,CAAAA,QAJ2B,EAIjB;EACZ;EACN;EACA;EACA;EACA;EACM,MAAIA,IAAAA,QAAQ,KAAKN,KAAjB,EAAwB,OAAA;EACxB;EACN;EACA;EACA;;EACMC,MAAAA,OAAO,CAACK,QAAD,CAAP,CAAA;EACAN,MAAAA,KAAK,GAAGM,QAAR,CAAA;EACD,KAAA;EAjB8B,GAAjC,CAAA,CAAA;EAmBD,CAAA;EAED;;;MACMC;EACJ,EAAA,SAAA,QAAA,CAAYV,IAAZ,EAAkB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;EAChB,IAAKW,IAAAA,CAAAA,IAAL,CAAUX,IAAV,CAAA,CAAA;EACD,GAAA;;;;EAED,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAW;EACT;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI,MAAA,IAAMY,IAAI,GAAGP,MAAM,CAACO,IAAP,CAAYZ,IAAZ,CAAb,CAAA;EACA;;EACA,MAAA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpC,QAAA,IAAMX,GAAG,GAAGU,IAAI,CAACC,CAAD,CAAhB,CAAA;EAAoB;;EACpB,QAAA,IAAMV,KAAK,GAAGH,IAAI,CAACE,GAAD,CAAlB,CAAA;EAAwB;;EACxB;EACN;EACA;EACA;EACA;EACA;EACA;EACA;;EACMD,QAAAA,cAAc,CAACD,IAAD,EAAOE,GAAP,EAAYC,KAAZ,CAAd,CAAA;EACD,OAAA;EACF,KAAA;;;;;EAGH;EACA;EACA;EACA;;;EACO,SAASC,OAAT,CAAiBJ,IAAjB,EAAuB;EAC5B;EACA,EAAA,IAAI,CAACD,QAAQ,CAACC,IAAD,CAAb,EAAqB,OAAA;EAErB;;EACA,EAAA,OAAO,IAAIU,QAAJ,CAAaV,IAAb,CAAP,CAAA;EACD;;EC/ED,SAASe,QAAT,CAAkBC,EAAlB,EAAsB;EACpB,EAAA,IAAIhB,IAAI,GAAGgB,EAAE,CAACC,QAAH,CAAYjB,IAAvB,CAAA;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACkB,IAAL,CAAUF,EAAV,CAA7B,GAA6ChB,IAApD,CAAA;EACAgB,EAAAA,EAAE,CAACG,KAAH,GAAWnB,IAAX,CAAA;EACA;;EACA;;EACA;EACF;EACA;EACA;;EACEI,EAAAA,OAAO,CAACJ,IAAD,CAAP,CAAA;EACD,CAAA;;EAIM,SAASoB,SAAT,CAAmBJ,EAAnB,EAAuB;EAC5B;EACA,EAAA,IAAMK,OAAO,GAAGL,EAAE,CAACC,QAAnB,CAAA;EAEA;;EACA,EAAII,IAAAA,OAAO,CAACC,KAAZ,EAAmB,CAElB;EAED;;;EACA,EAAID,IAAAA,OAAO,CAACE,OAAZ,EAAqB,CAEpB;EAED;;;EACA,EAAIF,IAAAA,OAAO,CAACrB,IAAZ,EAAkB;EAChBe,IAAAA,QAAQ,CAACC,EAAD,CAAR,CAAA;EACD,GAAA;EAED;;;EACA,EAAIK,IAAAA,OAAO,CAACG,QAAZ,EAAsB,CAErB;EAED;;;EACA,EAAIH,IAAAA,OAAO,CAACI,KAAZ,EAAmB,CAElB;EACF;;EC7CM,SAASC,KAAT,CAAeL,OAAf,EAAwB;EAC7B,EAAML,IAAAA,EAAE,GAAG,IAAX,CAAA;EACAA,EAAAA,EAAE,CAACC,QAAH,GAAcI,OAAd,CAAA;EACA;;EACAD,EAAAA,SAAS,CAACJ,EAAD,CAAT,CAAA;EACD;;MCLoBW,gCACnB,SAAYN,GAAAA,CAAAA,OAAZ,EAAqB;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;EACnB,EAAKK,IAAAA,CAAAA,KAAL,CAAWL,OAAX,CAAA,CAAA;EACD;EAGHM,GAAG,CAACC,SAAJ,CAAcF,KAAd,GAAsBA,KAAtB;;;;;;;;"}